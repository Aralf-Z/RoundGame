
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
/// <summary>
/// 角色面板属性
/// </summary>
public sealed partial class ChaPanelAttributes : Luban.BeanBase
{
    public ChaPanelAttributes(JSONNode _buf) 
    {
        { if(!_buf["health"].IsNumber) { throw new SerializationException(); }  Health = _buf["health"]; }
        { if(!_buf["endurance"].IsNumber) { throw new SerializationException(); }  Endurance = _buf["endurance"]; }
        { if(!_buf["attack"].IsNumber) { throw new SerializationException(); }  Attack = _buf["attack"]; }
        { if(!_buf["speed"].IsNumber) { throw new SerializationException(); }  Speed = _buf["speed"]; }
        { if(!_buf["armour"].IsNumber) { throw new SerializationException(); }  Armour = _buf["armour"]; }
        { if(!_buf["reflection"].IsNumber) { throw new SerializationException(); }  Reflection = _buf["reflection"]; }
        { if(!_buf["accuracy"].IsNumber) { throw new SerializationException(); }  Accuracy = _buf["accuracy"]; }
        { if(!_buf["magicAccuracy"].IsNumber) { throw new SerializationException(); }  MagicAccuracy = _buf["magicAccuracy"]; }
        { if(!_buf["miracleAccuracy"].IsNumber) { throw new SerializationException(); }  MiracleAccuracy = _buf["miracleAccuracy"]; }
        { if(!_buf["apRecover"].IsNumber) { throw new SerializationException(); }  ApRecover = _buf["apRecover"]; }
        { if(!_buf["apLimit"].IsNumber) { throw new SerializationException(); }  ApLimit = _buf["apLimit"]; }
        { if(!_buf["extraAction"].IsNumber) { throw new SerializationException(); }  ExtraAction = _buf["extraAction"]; }
        { var __json0 = _buf["resistance"]; if(!__json0.IsArray) { throw new SerializationException(); } Resistance = new System.Collections.Generic.Dictionary<ElementType, int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { ElementType _k0;  { if(!__e0[0].IsNumber) { throw new SerializationException(); }  _k0 = (ElementType)__e0[0].AsInt; } int _v0;  { if(!__e0[1].IsNumber) { throw new SerializationException(); }  _v0 = __e0[1]; }  Resistance.Add(_k0, _v0); }   }
    }

    public static ChaPanelAttributes DeserializeChaPanelAttributes(JSONNode _buf)
    {
        return new ChaPanelAttributes(_buf);
    }

    /// <summary>
    /// 生命
    /// </summary>
    public readonly int Health;
    /// <summary>
    /// 耐力
    /// </summary>
    public readonly int Endurance;
    /// <summary>
    /// 攻击
    /// </summary>
    public readonly int Attack;
    /// <summary>
    /// 速度
    /// </summary>
    public readonly int Speed;
    /// <summary>
    /// 护甲
    /// </summary>
    public readonly int Armour;
    /// <summary>
    /// 反应
    /// </summary>
    public readonly int Reflection;
    /// <summary>
    /// 命中
    /// </summary>
    public readonly int Accuracy;
    /// <summary>
    /// 魔法命中
    /// </summary>
    public readonly int MagicAccuracy;
    /// <summary>
    /// 奇迹命中
    /// </summary>
    public readonly int MiracleAccuracy;
    /// <summary>
    /// ap回复
    /// </summary>
    public readonly int ApRecover;
    /// <summary>
    /// ap上限
    /// </summary>
    public readonly int ApLimit;
    /// <summary>
    /// 额外行动
    /// </summary>
    public readonly int ExtraAction;
    /// <summary>
    /// 抗性
    /// </summary>
    public readonly System.Collections.Generic.Dictionary<ElementType, int> Resistance;
   
    public const int __ID__ = 1039008351;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "health:" + Health + ","
        + "endurance:" + Endurance + ","
        + "attack:" + Attack + ","
        + "speed:" + Speed + ","
        + "armour:" + Armour + ","
        + "reflection:" + Reflection + ","
        + "accuracy:" + Accuracy + ","
        + "magicAccuracy:" + MagicAccuracy + ","
        + "miracleAccuracy:" + MiracleAccuracy + ","
        + "apRecover:" + ApRecover + ","
        + "apLimit:" + ApLimit + ","
        + "extraAction:" + ExtraAction + ","
        + "resistance:" + Luban.StringUtil.CollectionToString(Resistance) + ","
        + "}";
    }
}

}

